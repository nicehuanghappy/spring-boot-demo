spring: 
  cloud:
    nacos:
      discovery:
        #nacos注册中心
         server-addr: 10.51.225.9:28848
#        server-addr: ${NACOS_URL:10.51.225.9:28848}
  application: 
    #服务名
    name: ${APPLICATION_NAME:default}
  datasource: 
    #mysql数据库密码
    password: ${APP_DB_PASSWORD:root}
    druid: 
      # 最小连接池数量
      min-idle: ${APP_DB_MIN_IDLE:5}
      # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true
      max-pool-prepared-statement-per-connection-size: 20
      # 最大连接池数量
      max-active: ${APP_DB_MAX_ACTIVE:10}
      # 申请连接的时候检测，如果空闲时间大于imeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      test-while-idle: true
      # 用来检测连接是否有效的sql，要求是一个查询语句,如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用
      validation-query: SELECT 'X' FROM DUAL
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: true
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 配置获取连接等待超时的时间
      max-wait: 60000
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-borrow: false
      # 最小空闲连接数保活
      keep-alive: true
      # 打开PSCache，并且指定每个连接上PSCache的大小
      pool-prepared-statements: true
      #数据库初始化连接个数
      initial-size: ${APP_DB_INITIAL_SIZE:5}
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      min-evictable-idle-time-millis: 300000
      # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能
      test-on-return: false
    #数据库驱动
    driver-class-name: ${APP_DB_DRIVER:com.mysql.jdbc.Driver}
    #数据库链接
    url: ${APP_DB_URL:jdbc:mysql://127.0.0.1:3306/demo_test?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8&autoReconnect=true&failOverReadOnly=false&useSSL=false&verifyServerCertificate=false}
    #mysql数据库用户名
    username: ${APP_DB_USER:root}
server: 
  #服务端口
  port: ${SERVER_PORT:9994}
cluster: 
  application-rules: 
    config: 
      enabled: false
management: 
  endpoints: 
    web: 
      exposure: 
        include: "*"
        exclude: service-registry
mybatis: 
  #Mapper接口对应xml文件地址
  mapper-locations: classpath:sqlmap/**/*.xml
bole: 
  application: 
    sys-code: ${GATEWAY_SYSCODE:PRIMETON}
    app-cfg-grp-codes: flow,degrade,param-flow
    app-inst-grp-code: default
    #匹配服务治理平台应用sys-key
    sys-key: ${GATEWAY_SYSKEY:1111}
  halo: 
    exception: 
      # 自定义异常代码和消息配置文件位置
      location: classpath:halo-exception.properties
      # 全局异常处理组件开关
      enabled: true

    checkvalidator: 
      # 开启body校验
      fieldValid: true
      # 开启Head校验
      fieldHeadValid: true
  seq: 
    #序列名demo
    bizTag: sqtest25
api: 
  gateway: 
    config[0]: 
      #网关编码，需要和治理门户上定义的网关编码保持一致
      path: GATEWAY-default
      #订阅凭证，用于系统间访问的凭证，需要和治理门户上API授权中订阅者的订阅凭证保持一致
      key: b4c0de0b367d4925b6c494613e5bea30
